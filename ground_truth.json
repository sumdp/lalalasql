[
  {
    "natural_language": "How many teams are in the NBA?",
    "sql": "SELECT COUNT(*) as team_count FROM team LIMIT 1",
    "type": "counting"
  },
  {
    "natural_language": "What are the 5 oldest teams in the NBA?",
    "sql": "SELECT full_name FROM team ORDER BY year_founded ASC LIMIT 5",
    "type": "ranking"
  },
  {
    "natural_language": "List all teams from California",
    "sql": "SELECT full_name FROM team WHERE state = 'California'",
    "type": "filtering"
  },
  {
    "natural_language": "What's the total number of games played?",
    "sql": "SELECT COUNT(DISTINCT game_id) as total_games FROM game LIMIT 1",
    "type": "counting"
  },
  {
    "natural_language": "What's the highest scoring game?",
    "sql": "SELECT g.pts_home + g.pts_away as total_points FROM game g ORDER BY total_points DESC LIMIT 1",
    "type": "ranking"
  },
  {
    "natural_language": "How many players are from Duke University?",
    "sql": "SELECT COUNT(*) as player_count FROM draft_history WHERE organization = 'Duke University' LIMIT 1",
    "type": "counting"
  },
  {
    "natural_language": "Which team has the most home games?",
    "sql": "SELECT t.full_name FROM game g JOIN team t ON g.team_id_home = t.id GROUP BY t.id, t.full_name ORDER BY COUNT(*) DESC LIMIT 1",
    "type": "ranking"
  },
  {
    "natural_language": "What's the average points per game?",
    "sql": "SELECT ROUND(AVG(pts_home + pts_away) / 2, 2) as avg_points FROM game LIMIT 1",
    "type": "aggregation"
  },
  {
    "natural_language": "List all players from Spain",
    "sql": "SELECT first_name, last_name FROM common_player_info WHERE country = 'Spain'",
    "type": "filtering"
  },
  {
    "natural_language": "How many games went to overtime?",
    "sql": "SELECT COUNT(*) as ot_games FROM line_score WHERE pts_ot1_home IS NOT NULL LIMIT 1",
    "type": "counting"
  },
  {
    "natural_language": "What's the most common jersey number?",
    "sql": "SELECT jersey FROM common_player_info WHERE jersey != '' GROUP BY jersey ORDER BY COUNT(*) DESC LIMIT 1",
    "type": "ranking"
  },
  {
    "natural_language": "List all teams in the Eastern Conference",
    "sql": "SELECT full_name FROM team WHERE city IN ('Boston', 'Brooklyn', 'New York', 'Philadelphia', 'Toronto', 'Chicago', 'Cleveland', 'Detroit', 'Indiana', 'Milwaukee', 'Atlanta', 'Charlotte', 'Miami', 'Orlando', 'Washington')",
    "type": "filtering"
  },
  {
    "natural_language": "What's the average height of NBA players?",
    "sql": "SELECT ROUND(AVG(CAST(SUBSTR(height, 1, INSTR(height, '-')-1) AS FLOAT)), 2) as avg_height FROM common_player_info WHERE height != '' LIMIT 1",
    "type": "aggregation"
  },
  {
    "natural_language": "How many players were drafted in 2020?",
    "sql": "SELECT COUNT(*) as draft_count FROM draft_history WHERE season = '2020' LIMIT 1",
    "type": "counting"
  },
  {
    "natural_language": "Which team has the newest arena?",
    "sql": "SELECT t.full_name FROM team t JOIN team_details td ON t.id = td.team_id ORDER BY td.arena DESC LIMIT 1",
    "type": "detail"
  },
  {
    "natural_language": "What's the average weight of NBA players?",
    "sql": "SELECT ROUND(AVG(CAST(weight AS FLOAT)), 2) as avg_weight FROM common_player_info WHERE weight != '' LIMIT 1",
    "type": "aggregation"
  },
  {
    "natural_language": "List all rookie players",
    "sql": "SELECT first_name, last_name FROM common_player_info WHERE season_exp = 0",
    "type": "filtering"
  },
  {
    "natural_language": "How many games are played on Christmas Day?",
    "sql": "SELECT COUNT(*) as christmas_games FROM game_info WHERE strftime('%m-%d', game_date) = '12-25' LIMIT 1",
    "type": "counting"
  },
  {
    "natural_language": "What's the most points scored by the home team?",
    "sql": "SELECT pts_home FROM game ORDER BY pts_home DESC LIMIT 1",
    "type": "ranking"
  },
  {
    "natural_language": "Which team has the longest name?",
    "sql": "SELECT full_name FROM team ORDER BY LENGTH(full_name) DESC LIMIT 1",
    "type": "detail"
  },
  {
    "natural_language": "How many players are guards?",
    "sql": "SELECT COUNT(*) as guard_count FROM common_player_info WHERE position LIKE '%G%' LIMIT 1",
    "type": "counting"
  },
  {
    "natural_language": "What's the average game time in hours?",
    "sql": "SELECT ROUND(AVG(CAST(SUBSTR(game_time, 1, INSTR(game_time, ':') - 1) AS INTEGER)), 2) as avg_hours FROM game_info WHERE game_time != '' LIMIT 1",
    "type": "aggregation"
  },
  {
    "natural_language": "List all teams that have never made the playoffs",
    "sql": "SELECT t.full_name FROM team t WHERE NOT EXISTS (SELECT 1 FROM game g WHERE g.season_type = 'Playoffs' AND (g.team_id_home = t.id OR g.team_id_away = t.id))",
    "type": "filtering"
  },
  {
    "natural_language": "What's the most common player position?",
    "sql": "SELECT position FROM common_player_info WHERE position IS NOT NULL GROUP BY position ORDER BY COUNT(*) DESC LIMIT 1",
    "type": "ranking"
  },
  {
    "natural_language": "List all players drafted in 2016",
    "sql": "SELECT player_name FROM draft_history WHERE season = 2016 ORDER BY overall_pick",
    "type": "filtering"
  },
  {
    "natural_language": "What are the top 10 teams by total points scored?",
    "sql": "SELECT t.full_name FROM game g JOIN team t ON t.id = g.team_id_home OR t.id = g.team_id_away GROUP BY t.id, t.full_name ORDER BY SUM(CASE WHEN g.team_id_home = t.id THEN g.pts_home ELSE g.pts_away END) DESC LIMIT 10",
    "type": "ranking"
  },
  {
    "natural_language": "List all games where both teams scored over 110 points",
    "sql": "SELECT g.game_id FROM game g WHERE g.pts_home > 110 AND g.pts_away > 110",
    "type": "filtering"
  },
  {
    "natural_language": "How many active players are there?",
    "sql": "SELECT COUNT(*) as active_players FROM player WHERE is_active = 1",
    "type": "counting"
  },
  {
    "natural_language": "What's the most common jersey number by position?",
    "sql": "SELECT cpi.position, cpi.jersey FROM common_player_info cpi WHERE cpi.jersey != '' AND cpi.position IS NOT NULL GROUP BY cpi.position, cpi.jersey ORDER BY COUNT(*) DESC LIMIT 1",
    "type": "aggregation"
  },
  {
    "natural_language": "Which team has the biggest home court advantage in terms of win percentage?",
    "sql": "SELECT t.full_name FROM game g JOIN team t ON t.id IN (g.team_id_home, g.team_id_away) GROUP BY t.id, t.full_name HAVING COUNT(*) >= 100 ORDER BY (CAST(SUM(CASE WHEN g.team_id_home = t.id AND g.pts_home > g.pts_away THEN 1 ELSE 0 END) AS FLOAT) / COUNT(CASE WHEN g.team_id_home = t.id THEN 1 END) * 100 - CAST(SUM(CASE WHEN g.team_id_away = t.id AND g.pts_away > g.pts_home THEN 1 ELSE 0 END) AS FLOAT) / COUNT(CASE WHEN g.team_id_away = t.id THEN 1 END) * 100) DESC LIMIT 1",
    "type": "ranking"
  },
  {
    "natural_language": "Which season type has the highest average attendance?",
    "sql": "SELECT g.season_type, ROUND(AVG(gi.attendance), 0) as avg_attendance FROM game g JOIN game_info gi ON g.game_id = gi.game_id WHERE gi.attendance > 0 GROUP BY g.season_type ORDER BY avg_attendance DESC LIMIT 1",
    "type": "comparison"
  },
  {
    "natural_language": "Which team has had the most different home arenas?",
    "sql": "SELECT t.full_name FROM team t JOIN team_details td ON t.id = td.team_id GROUP BY t.id, t.full_name ORDER BY COUNT(DISTINCT td.arena) DESC LIMIT 1",
    "type": "history"
  },
  {
    "natural_language": "What's the most common first name among NBA players?",
    "sql": "SELECT first_name FROM player GROUP BY first_name ORDER BY COUNT(*) DESC LIMIT 1",
    "type": "detail"
  },
  {
    "natural_language": "Which conference produces the most drafted players?",
    "sql": "SELECT CASE WHEN dh.organization LIKE '%ACC%' THEN 'ACC' WHEN dh.organization LIKE '%SEC%' THEN 'SEC' WHEN dh.organization LIKE '%Big Ten%' THEN 'Big Ten' ELSE 'Other' END as conference FROM draft_history dh WHERE dh.organization_type = 'College/University' GROUP BY conference ORDER BY COUNT(DISTINCT dh.person_id) DESC LIMIT 1",
    "type": "counting"
  },
  {
    "natural_language": "Which team has the highest percentage of international players?",
    "sql": "SELECT t.full_name FROM common_player_info cpi JOIN team t ON cpi.team_id = t.id GROUP BY cpi.team_id, t.full_name HAVING COUNT(*) >= 10 ORDER BY CAST(SUM(CASE WHEN cpi.country != 'USA' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(*) * 100 DESC LIMIT 1",
    "type": "ranking"
  },
  {
    "natural_language": "Which school has the best average draft position?",
    "sql": "SELECT dh.organization FROM draft_history dh WHERE dh.organization_type = 'College/University' GROUP BY dh.organization HAVING COUNT(*) >= 5 ORDER BY AVG(dh.overall_pick) ASC LIMIT 1",
    "type": "aggregation"
  },
  {
    "natural_language": "List all teams that have never changed their team name",
    "sql": "SELECT t.full_name FROM team t LEFT JOIN team_history th ON t.id = th.team_id WHERE th.team_id IS NULL",
    "type": "filtering"
  },
  {
    "natural_language": "Who is the referee that has officiated the most games?",
    "sql": "SELECT o.first_name || ' ' || o.last_name as name FROM officials o GROUP BY o.official_id, o.first_name, o.last_name ORDER BY COUNT(*) DESC LIMIT 1",
    "type": "aggregation"
  },
  {
    "natural_language": "List all games with more than 15 lead changes",
    "sql": "SELECT g.game_id FROM game g JOIN other_stats os ON g.game_id = os.game_id WHERE os.lead_changes > 15",
    "type": "filtering"
  },
  {
    "natural_language": "Which team has the highest win percentage?",
    "sql": "SELECT t.full_name FROM game g JOIN team t ON t.id = g.team_id_home OR t.id = g.team_id_away GROUP BY t.id, t.full_name HAVING COUNT(*) >= 100 ORDER BY CAST(SUM(CASE WHEN (g.team_id_home = t.id AND g.pts_home > g.pts_away) OR (g.team_id_away = t.id AND g.pts_away > g.pts_home) THEN 1 ELSE 0 END) AS FLOAT) / COUNT(*) * 100 DESC LIMIT 1",
    "type": "ranking"
  },
  {
    "natural_language": "List all games where both teams scored over 120 points",
    "sql": "SELECT g.game_id FROM game g WHERE g.pts_home > 120 AND g.pts_away > 120",
    "type": "filtering"
  },
  {
    "natural_language": "What's the average attendance for Lakers home games?",
    "sql": "SELECT AVG(gi.attendance) as avg_attendance FROM game g JOIN team t ON g.team_id_home = t.id JOIN game_info gi ON g.game_id = gi.game_id WHERE t.nickname = 'Lakers'",
    "type": "aggregation"
  },
  {
    "natural_language": "List all players from Serbia",
    "sql": "SELECT first_name, last_name FROM common_player_info WHERE country = 'Serbia'",
    "type": "filtering"
  },
  {
    "natural_language": "How many games were played in 2019?",
    "sql": "SELECT COUNT(DISTINCT game_id) as games_played FROM game_info WHERE strftime('%Y', game_date) = '2019'",
    "type": "counting"
  },
  {
    "natural_language": "What is the arena capacity for the Warriors?",
    "sql": "SELECT td.arenacapacity FROM team t JOIN team_details td ON t.id = td.team_id WHERE t.nickname = 'Warriors'",
    "type": "detail"
  },
  {
    "natural_language": "Who is the player that was inactive the most times for the Celtics?",
    "sql": "SELECT ip.first_name || ' ' || ip.last_name as player_name FROM inactive_players ip JOIN team t ON ip.team_id = t.id WHERE t.nickname = 'Celtics' GROUP BY ip.player_id, ip.first_name, ip.last_name ORDER BY COUNT(*) DESC LIMIT 1",
    "type": "aggregation"
  },
  {
    "natural_language": "How many points did the Warriors score in the paint in their home games?",
    "sql": "SELECT SUM(os.pts_paint_home) as total_paint_points FROM game g JOIN team t ON g.team_id_home = t.id JOIN other_stats os ON g.game_id = os.game_id WHERE t.nickname = 'Warriors'",
    "type": "aggregation"
  },
  {
    "natural_language": "List all games that went to overtime",
    "sql": "SELECT g.game_id FROM game g JOIN line_score ls ON g.game_id = ls.game_id WHERE ls.pts_ot1_home IS NOT NULL",
    "type": "filtering"
  },
  {
    "natural_language": "Which team had the most nationally televised games?",
    "sql": "SELECT t.full_name FROM game_summary gs JOIN team t ON gs.home_team_id = t.id OR gs.visitor_team_id = t.id WHERE gs.natl_tv_broadcaster_abbreviation IS NOT NULL GROUP BY t.id, t.full_name ORDER BY COUNT(*) DESC LIMIT 1",
    "type": "aggregation"
  },
  {
    "natural_language": "Which team scored the most fast break points?",
    "sql": "SELECT t.full_name FROM game g JOIN team t ON t.id = g.team_id_home OR t.id = g.team_id_away JOIN other_stats os ON g.game_id = os.game_id GROUP BY t.id, t.full_name ORDER BY SUM(CASE WHEN g.team_id_home = t.id THEN os.pts_fb_home ELSE os.pts_fb_away END) DESC LIMIT 1",
    "type": "ranking"
  },
  {
    "natural_language": "Which team has the best record in close games (margin ≤ 5 points)?",
    "sql": "SELECT t.full_name FROM game g JOIN team t ON t.id IN (g.team_id_home, g.team_id_away) WHERE ABS(g.pts_home - g.pts_away) <= 5 GROUP BY t.id, t.full_name HAVING COUNT(*) >= 100 ORDER BY CAST(SUM(CASE WHEN (g.team_id_home = t.id AND g.pts_home > g.pts_away) OR (g.team_id_away = t.id AND g.pts_away > g.pts_home) THEN 1 ELSE 0 END) AS FLOAT) / COUNT(*) * 100 DESC LIMIT 1",
    "type": "ranking"
  },
  {
    "natural_language": "Who is the player with the longest name?",
    "sql": "SELECT first_name || ' ' || last_name as full_name FROM common_player_info ORDER BY LENGTH(first_name || ' ' || last_name) DESC LIMIT 1",
    "type": "filtering"
  },
  {
    "natural_language": "What's the average margin of victory in playoff games?",
    "sql": "SELECT ROUND(AVG(ABS(g.pts_home - g.pts_away)), 2) as avg_margin FROM game g WHERE g.season_type = 'Playoffs'",
    "type": "comparison"
  },
  {
    "natural_language": "Which team has the most different players on their all-time roster?",
    "sql": "SELECT t.full_name FROM team t JOIN common_player_info cpi ON t.id = cpi.team_id GROUP BY t.id, t.full_name ORDER BY COUNT(DISTINCT cpi.person_id) DESC LIMIT 1",
    "type": "aggregation"
  },
  {
    "natural_language": "What's the most common final score?",
    "sql": "SELECT g.pts_home || '-' || g.pts_away as score FROM game g GROUP BY g.pts_home, g.pts_away ORDER BY COUNT(*) DESC LIMIT 1",
    "type": "aggregation"
  },
  {
    "natural_language": "Which team has the best record on Christmas Day?",
    "sql": "SELECT t.full_name FROM game g JOIN team t ON t.id IN (g.team_id_home, g.team_id_away) JOIN game_info gi ON g.game_id = gi.game_id WHERE strftime('%m-%d', gi.game_date) = '12-25' GROUP BY t.id, t.full_name HAVING COUNT(*) >= 5 ORDER BY CAST(SUM(CASE WHEN (g.team_id_home = t.id AND g.pts_home > g.pts_away) OR (g.team_id_away = t.id AND g.pts_away > g.pts_home) THEN 1 ELSE 0 END) AS FLOAT) / COUNT(*) DESC LIMIT 1",
    "type": "ranking"
  },
  {
    "natural_language": "What's the win percentage difference between teams with 3+ rest days vs fewer rest days?",
    "sql": "WITH rest_days AS (SELECT g.game_id, t.id, t.full_name, JULIANDAY(g.game_date) - JULIANDAY(LAG(g.game_date) OVER (PARTITION BY t.id ORDER BY g.game_date)) as days_rest, CASE WHEN (g.team_id_home = t.id AND g.pts_home > g.pts_away) OR (g.team_id_away = t.id AND g.pts_away > g.pts_home) THEN 1 ELSE 0 END as won FROM game g JOIN team t ON t.id IN (g.team_id_home, g.team_id_away)) SELECT ROUND(AVG(CASE WHEN days_rest >= 3 THEN won END) * 100, 2) - ROUND(AVG(CASE WHEN days_rest < 3 THEN won END) * 100, 2) as win_pct_diff FROM rest_days WHERE days_rest IS NOT NULL",
    "type": "comparison"
  },
  {
    "natural_language": "How many players have played for both the Lakers and Celtics?",
    "sql": "WITH team_players AS (SELECT DISTINCT cpi.person_id FROM common_player_info cpi JOIN team t ON cpi.team_id = t.id WHERE t.nickname IN ('Lakers', 'Celtics')) SELECT COUNT(*) as players_count FROM (SELECT person_id FROM team_players GROUP BY person_id HAVING COUNT(*) = 2) x LIMIT 1",
    "type": "counting"
  },
  {
    "natural_language": "How many games have gone to multiple overtimes?",
    "sql": "SELECT COUNT(*) as multi_ot_games FROM game g JOIN line_score l ON g.game_id = l.game_id WHERE l.pts_ot2_home IS NOT NULL LIMIT 1",
    "type": "counting"
  },
  {
    "natural_language": "What's the average game attendance?",
    "sql": "SELECT ROUND(AVG(attendance), 0) as avg_attendance FROM game_info WHERE attendance > 0 LIMIT 1",
    "type": "aggregation"
  },
  {
    "natural_language": "Which team has the highest percentage of games with 100+ points scored?",
    "sql": "SELECT t.full_name FROM game g JOIN team t ON t.id IN (g.team_id_home, g.team_id_away) GROUP BY t.id, t.full_name HAVING COUNT(*) >= 50 ORDER BY CAST(SUM(CASE WHEN (g.team_id_home = t.id AND g.pts_home >= 100) OR (g.team_id_away = t.id AND g.pts_away >= 100) THEN 1 ELSE 0 END) AS FLOAT) / COUNT(*) * 100 DESC LIMIT 1",
    "type": "ranking"
  },
  {
    "natural_language": "What's the largest point deficit in any game?",
    "sql": "SELECT MAX(ABS(pts_home - pts_away)) as max_deficit FROM game",
    "type": "ranking"
  },
  {
    "natural_language": "What percentage of games are won by the home team?",
    "sql": "SELECT ROUND(CAST(SUM(CASE WHEN pts_home > pts_away THEN 1 ELSE 0 END) AS FLOAT) / COUNT(*) * 100, 2) as home_win_pct FROM game",
    "type": "aggregation"
  },
  {
    "natural_language": "Which team has the highest free throw percentage?",
    "sql": "SELECT t.full_name FROM game g JOIN team t ON t.id IN (g.team_id_home, g.team_id_away) GROUP BY t.id, t.full_name HAVING SUM(CASE WHEN g.team_id_home = t.id THEN g.fta_home ELSE g.fta_away END) >= 100 ORDER BY CAST(SUM(CASE WHEN g.team_id_home = t.id THEN g.ftm_home ELSE g.ftm_away END) AS FLOAT) / SUM(CASE WHEN g.team_id_home = t.id THEN g.fta_home ELSE g.fta_away END) * 100 DESC LIMIT 1",
    "type": "ranking"
  },
  {
    "natural_language": "What's the average number of fouls per game?",
    "sql": "SELECT ROUND(AVG(pf_home + pf_away), 2) as avg_fouls FROM game",
    "type": "aggregation"
  },
  {
    "natural_language": "Which team has the highest 3-point shooting percentage?",
    "sql": "SELECT t.full_name FROM game g JOIN team t ON t.id IN (g.team_id_home, g.team_id_away) GROUP BY t.id, t.full_name HAVING SUM(CASE WHEN g.team_id_home = t.id THEN g.fg3a_home ELSE g.fg3a_away END) >= 100 ORDER BY CAST(SUM(CASE WHEN g.team_id_home = t.id THEN g.fg3m_home ELSE g.fg3m_away END) AS FLOAT) / SUM(CASE WHEN g.team_id_home = t.id THEN g.fg3a_home ELSE g.fg3a_away END) * 100 DESC LIMIT 1",
    "type": "ranking"
  },
  {
    "natural_language": "What's the average number of rebounds per game?",
    "sql": "SELECT ROUND(AVG(reb_home + reb_away), 2) as avg_rebounds FROM game",
    "type": "aggregation"
  },
  {
    "natural_language": "How many games were decided by a single possession (3 points or less)?",
    "sql": "SELECT COUNT(*) FROM game WHERE ABS(pts_home - pts_away) <= 3",
    "type": "counting"
  },
  {
    "natural_language": "How many players were drafted in the first round in 2019?",
    "sql": "SELECT COUNT(*) FROM draft_history WHERE season = '2019' AND round_number = 1",
    "type": "counting"
  },
  {
    "natural_language": "Which team has the highest average attendance?",
    "sql": "SELECT t.full_name FROM game g JOIN team t ON g.team_id_home = t.id JOIN game_info gi ON g.game_id = gi.game_id WHERE gi.attendance > 0 GROUP BY t.id, t.full_name ORDER BY AVG(gi.attendance) DESC LIMIT 1",
    "type": "ranking"
  },
  {
    "natural_language": "What's the most common final score in overtime games?",
    "sql": "SELECT g.pts_home || '-' || g.pts_away as score FROM game g JOIN line_score l ON g.game_id = l.game_id WHERE l.pts_ot1_home IS NOT NULL GROUP BY g.pts_home, g.pts_away ORDER BY COUNT(*) DESC LIMIT 1",
    "type": "aggregation"
  },
  {
    "natural_language": "How many players are from Kentucky?",
    "sql": "SELECT COUNT(*) FROM draft_history WHERE organization = 'Kentucky'",
    "type": "counting"
  },
  {
    "natural_language": "Which team has the most assists per game?",
    "sql": "SELECT t.full_name FROM game g JOIN team t ON t.id IN (g.team_id_home, g.team_id_away) GROUP BY t.id, t.full_name ORDER BY CAST(SUM(CASE WHEN g.team_id_home = t.id THEN g.ast_home ELSE g.ast_away END) AS FLOAT) / COUNT(*) DESC LIMIT 1",
    "type": "ranking"
  },
  {
    "natural_language": "What's the average height of centers?",
    "sql": "SELECT ROUND(AVG(CAST(SUBSTR(height, 1, INSTR(height, '-')-1) AS FLOAT)), 2) as avg_height FROM common_player_info WHERE position LIKE '%C%' AND height != ''",
    "type": "aggregation"
  },
  {
    "natural_language": "Which team has the most playoff appearances?",
    "sql": "SELECT t.full_name FROM game g JOIN team t ON t.id IN (g.team_id_home, g.team_id_away) WHERE g.season_type = 'Playoffs' GROUP BY t.id, t.full_name ORDER BY COUNT(DISTINCT SUBSTR(g.season_id, 1, 4)) DESC LIMIT 1",
    "type": "ranking"
  },
  {
    "natural_language": "What's the most common player height?",
    "sql": "SELECT height FROM common_player_info WHERE height != '' GROUP BY height ORDER BY COUNT(*) DESC LIMIT 1",
    "type": "detail"
  },
  {
    "natural_language": "How many games were played on New Year's Day?",
    "sql": "SELECT COUNT(*) FROM game_info WHERE strftime('%m-%d', game_date) = '01-01'",
    "type": "counting"
  },
  {
    "natural_language": "Which team has the highest percentage of games with 10+ steals?",
    "sql": "SELECT t.full_name FROM game g JOIN team t ON t.id IN (g.team_id_home, g.team_id_away) GROUP BY t.id, t.full_name HAVING COUNT(*) >= 50 ORDER BY CAST(SUM(CASE WHEN (g.team_id_home = t.id AND g.stl_home >= 10) OR (g.team_id_away = t.id AND g.stl_away >= 10) THEN 1 ELSE 0 END) AS FLOAT) / COUNT(*) * 100 DESC LIMIT 1",
    "type": "ranking"
  },
  {
    "natural_language": "What's the average number of blocks per game?",
    "sql": "SELECT ROUND(AVG(blk_home + blk_away), 2) as avg_blocks FROM game",
    "type": "aggregation"
  },
  {
    "natural_language": "Which team has the most games with 20+ assists?",
    "sql": "SELECT t.full_name FROM game g JOIN team t ON t.id IN (g.team_id_home, g.team_id_away) GROUP BY t.id, t.full_name ORDER BY SUM(CASE WHEN (g.team_id_home = t.id AND g.ast_home >= 20) OR (g.team_id_away = t.id AND g.ast_away >= 20) THEN 1 ELSE 0 END) DESC LIMIT 1",
    "type": "ranking"
  },
  {
    "natural_language": "Which team has the lowest turnover rate?",
    "sql": "SELECT t.full_name FROM game g JOIN team t ON t.id IN (g.team_id_home, g.team_id_away) GROUP BY t.id, t.full_name HAVING COUNT(*) >= 50 ORDER BY CAST(SUM(CASE WHEN g.team_id_home = t.id THEN g.tov_home ELSE g.tov_away END) AS FLOAT) / COUNT(*) ASC LIMIT 1",
    "type": "ranking"
  },
  {
    "natural_language": "What's the average weight of power forwards?",
    "sql": "SELECT ROUND(AVG(CAST(weight AS FLOAT)), 2) as avg_weight FROM common_player_info WHERE position LIKE '%F%' AND weight != ''",
    "type": "aggregation"
  },
  {
    "natural_language": "Which team has the most games with 15+ three-pointers made?",
    "sql": "SELECT t.full_name FROM game g JOIN team t ON t.id IN (g.team_id_home, g.team_id_away) GROUP BY t.id, t.full_name ORDER BY SUM(CASE WHEN (g.team_id_home = t.id AND g.fg3m_home >= 15) OR (g.team_id_away = t.id AND g.fg3m_away >= 15) THEN 1 ELSE 0 END) DESC LIMIT 1",
    "type": "ranking"
  },
  {
    "natural_language": "What's the most common margin of victory?",
    "sql": "SELECT ABS(pts_home - pts_away) as margin FROM game GROUP BY margin ORDER BY COUNT(*) DESC LIMIT 1",
    "type": "detail"
  },
  {
    "natural_language": "How many players have jersey numbers greater than 50?",
    "sql": "SELECT COUNT(*) FROM common_player_info WHERE CAST(jersey AS INTEGER) > 50 AND jersey != ''",
    "type": "counting"
  },
  {
    "natural_language": "Which team has the highest offensive rebound percentage?",
    "sql": "SELECT t.full_name FROM game g JOIN team t ON t.id IN (g.team_id_home, g.team_id_away) GROUP BY t.id, t.full_name HAVING COUNT(*) >= 50 ORDER BY CAST(SUM(CASE WHEN g.team_id_home = t.id THEN g.oreb_home ELSE g.oreb_away END) AS FLOAT) / SUM(CASE WHEN g.team_id_home = t.id THEN (g.oreb_home + g.dreb_away) ELSE (g.oreb_away + g.dreb_home) END) * 100 DESC LIMIT 1",
    "type": "ranking"
  },
  {
    "natural_language": "What's the average number of three-point attempts per game?",
    "sql": "SELECT ROUND(AVG(fg3a_home + fg3a_away), 2) as avg_3pa FROM game",
    "type": "aggregation"
  },
  {
    "natural_language": "Which team has the most games with 50+ rebounds?",
    "sql": "SELECT t.full_name FROM game g JOIN team t ON t.id IN (g.team_id_home, g.team_id_away) GROUP BY t.id, t.full_name ORDER BY SUM(CASE WHEN (g.team_id_home = t.id AND g.reb_home >= 50) OR (g.team_id_away = t.id AND g.reb_away >= 50) THEN 1 ELSE 0 END) DESC LIMIT 1",
    "type": "ranking"
  },
  {
    "natural_language": "How many players were drafted in the second round in 2017?",
    "sql": "SELECT COUNT(*) FROM draft_history WHERE season = '2017' AND round_number = 2",
    "type": "counting"
  },
  {
    "natural_language": "Which team has the highest field goal percentage in home games?",
    "sql": "SELECT t.full_name FROM game g JOIN team t ON g.team_id_home = t.id GROUP BY t.id, t.full_name HAVING COUNT(*) >= 20 ORDER BY CAST(SUM(g.fgm_home) AS FLOAT) / SUM(g.fga_home) * 100 DESC LIMIT 1",
    "type": "ranking"
  },
  {
    "natural_language": "What's the average number of personal fouls in playoff games?",
    "sql": "SELECT ROUND(AVG(pf_home + pf_away), 2) as avg_fouls FROM game WHERE season_type = 'Playoffs'",
    "type": "aggregation"
  },
  {
    "natural_language": "Which team has the most games with 30+ assists?",
    "sql": "SELECT t.full_name FROM game g JOIN team t ON t.id IN (g.team_id_home, g.team_id_away) GROUP BY t.id, t.full_name ORDER BY SUM(CASE WHEN (g.team_id_home = t.id AND g.ast_home >= 30) OR (g.team_id_away = t.id AND g.ast_away >= 30) THEN 1 ELSE 0 END) DESC LIMIT 1",
    "type": "ranking"
  },
  {
    "natural_language": "What's the most common player weight?",
    "sql": "SELECT weight FROM common_player_info WHERE weight != '' GROUP BY weight ORDER BY COUNT(*) DESC LIMIT 1",
    "type": "detail"
  },
  {
    "natural_language": "How many games started before 7 PM local time?",
    "sql": "SELECT COUNT(*) FROM game_info WHERE CAST(SUBSTR(game_time, 1, 2) AS INTEGER) < 19",
    "type": "counting"
  },
  {
    "natural_language": "Which team has the highest percentage of games with 10+ blocks?",
    "sql": "SELECT t.full_name FROM game g JOIN team t ON t.id IN (g.team_id_home, g.team_id_away) GROUP BY t.id, t.full_name HAVING COUNT(*) >= 50 ORDER BY CAST(SUM(CASE WHEN (g.team_id_home = t.id AND g.blk_home >= 10) OR (g.team_id_away = t.id AND g.blk_away >= 10) THEN 1 ELSE 0 END) AS FLOAT) / COUNT(*) * 100 DESC LIMIT 1",
    "type": "ranking"
  },
  {
    "natural_language": "What's the average number of steals per game?",
    "sql": "SELECT ROUND(AVG(stl_home + stl_away), 2) as avg_steals FROM game",
    "type": "aggregation"
  },
  {
    "natural_language": "Which team has the most games with 120+ points scored?",
    "sql": "SELECT t.full_name FROM game g JOIN team t ON t.id IN (g.team_id_home, g.team_id_away) GROUP BY t.id, t.full_name ORDER BY SUM(CASE WHEN (g.team_id_home = t.id AND g.pts_home >= 120) OR (g.team_id_away = t.id AND g.pts_away >= 120) THEN 1 ELSE 0 END) DESC LIMIT 1",
    "type": "ranking"
  },
  {
    "natural_language": "What percentage of games are decided by 5 points or less?",
    "sql": "SELECT ROUND(CAST(SUM(CASE WHEN ABS(pts_home - pts_away) <= 5 THEN 1 ELSE 0 END) AS FLOAT) / COUNT(*) * 100, 2) as close_game_pct FROM game",
    "type": "aggregation"
  }
]